/**
 * ParallelStack RSearch API
 * REST API Specification for ParallelStack RSearch API
 *
 * OpenAPI spec version: 1.1.0
 * Contact: team@parallelstack.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import com.pstack.rsearch.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("CreateDocTypeFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateDocTypeFailure>>(){}.getType();
    }
    
    if ("CreateDocTypeSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateDocTypeSuccess>>(){}.getType();
    }
    
    if ("CreateDocumentFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateDocumentFailure>>(){}.getType();
    }
    
    if ("CreateDocumentSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateDocumentSuccess>>(){}.getType();
    }
    
    if ("CreateIndexFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateIndexFailure>>(){}.getType();
    }
    
    if ("CreateIndexSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateIndexSuccess>>(){}.getType();
    }
    
    if ("CreateIndexSuccessIndexes".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateIndexSuccessIndexes>>(){}.getType();
    }
    
    if ("DeleteDocumentFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteDocumentFailure>>(){}.getType();
    }
    
    if ("DeleteDocumentSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteDocumentSuccess>>(){}.getType();
    }
    
    if ("DeleteIndexFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteIndexFailure>>(){}.getType();
    }
    
    if ("DeleteIndexSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteIndexSuccess>>(){}.getType();
    }
    
    if ("DeleteIndexSuccessIndex".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteIndexSuccessIndex>>(){}.getType();
    }
    
    if ("Document".equalsIgnoreCase(className)) {
      return new TypeToken<List<Document>>(){}.getType();
    }
    
    if ("DocumentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<DocumentType>>(){}.getType();
    }
    
    if ("DocumentTypeFields".equalsIgnoreCase(className)) {
      return new TypeToken<List<DocumentTypeFields>>(){}.getType();
    }
    
    if ("GetDocTypeFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocTypeFailure>>(){}.getType();
    }
    
    if ("GetDocTypeSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocTypeSuccess>>(){}.getType();
    }
    
    if ("GetDocTypeSuccessDocumentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocTypeSuccessDocumentType>>(){}.getType();
    }
    
    if ("GetDocTypesFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocTypesFailure>>(){}.getType();
    }
    
    if ("GetDocTypesSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocTypesSuccess>>(){}.getType();
    }
    
    if ("GetDocTypesSuccessDocumentTypes".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocTypesSuccessDocumentTypes>>(){}.getType();
    }
    
    if ("GetDocumentFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocumentFailure>>(){}.getType();
    }
    
    if ("GetDocumentSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocumentSuccess>>(){}.getType();
    }
    
    if ("GetDocumentSuccessDocument".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocumentSuccessDocument>>(){}.getType();
    }
    
    if ("GetDocumentsFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocumentsFailure>>(){}.getType();
    }
    
    if ("GetDocumentsSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocumentsSuccess>>(){}.getType();
    }
    
    if ("GetDocumentsSuccessDocuments".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDocumentsSuccessDocuments>>(){}.getType();
    }
    
    if ("GetIndexFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetIndexFailure>>(){}.getType();
    }
    
    if ("GetIndexSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetIndexSuccess>>(){}.getType();
    }
    
    if ("GetIndexSuccessIndexes".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetIndexSuccessIndexes>>(){}.getType();
    }
    
    if ("GetIndexesFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetIndexesFailure>>(){}.getType();
    }
    
    if ("GetIndexesFailureIndexes".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetIndexesFailureIndexes>>(){}.getType();
    }
    
    if ("GetIndexesSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetIndexesSuccess>>(){}.getType();
    }
    
    if ("GetIndexesSuccessIndexes".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetIndexesSuccessIndexes>>(){}.getType();
    }
    
    if ("GetIndexesSuccessIndexesMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetIndexesSuccessIndexesMetadata>>(){}.getType();
    }
    
    if ("SearchFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchFailure>>(){}.getType();
    }
    
    if ("SearchFailureSuggestResults".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchFailureSuggestResults>>(){}.getType();
    }
    
    if ("SearchQuery".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchQuery>>(){}.getType();
    }
    
    if ("SearchQuerySearch".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchQuerySearch>>(){}.getType();
    }
    
    if ("SearchQuerySearchAggregations".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchQuerySearchAggregations>>(){}.getType();
    }
    
    if ("SearchSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchSuccess>>(){}.getType();
    }
    
    if ("SearchSuccessSuggestResults".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchSuccessSuggestResults>>(){}.getType();
    }
    
    if ("SearchSuccessSuggestResultsMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchSuccessSuggestResultsMetadata>>(){}.getType();
    }
    
    if ("SuggestFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestFailure>>(){}.getType();
    }
    
    if ("SuggestQuery".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestQuery>>(){}.getType();
    }
    
    if ("SuggestQuerySuggest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestQuerySuggest>>(){}.getType();
    }
    
    if ("SuggestSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestSuccess>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("CreateDocTypeFailure".equalsIgnoreCase(className)) {
      return new TypeToken<CreateDocTypeFailure>(){}.getType();
    }
    
    if ("CreateDocTypeSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<CreateDocTypeSuccess>(){}.getType();
    }
    
    if ("CreateDocumentFailure".equalsIgnoreCase(className)) {
      return new TypeToken<CreateDocumentFailure>(){}.getType();
    }
    
    if ("CreateDocumentSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<CreateDocumentSuccess>(){}.getType();
    }
    
    if ("CreateIndexFailure".equalsIgnoreCase(className)) {
      return new TypeToken<CreateIndexFailure>(){}.getType();
    }
    
    if ("CreateIndexSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<CreateIndexSuccess>(){}.getType();
    }
    
    if ("CreateIndexSuccessIndexes".equalsIgnoreCase(className)) {
      return new TypeToken<CreateIndexSuccessIndexes>(){}.getType();
    }
    
    if ("DeleteDocumentFailure".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteDocumentFailure>(){}.getType();
    }
    
    if ("DeleteDocumentSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteDocumentSuccess>(){}.getType();
    }
    
    if ("DeleteIndexFailure".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteIndexFailure>(){}.getType();
    }
    
    if ("DeleteIndexSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteIndexSuccess>(){}.getType();
    }
    
    if ("DeleteIndexSuccessIndex".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteIndexSuccessIndex>(){}.getType();
    }
    
    if ("Document".equalsIgnoreCase(className)) {
      return new TypeToken<Document>(){}.getType();
    }
    
    if ("DocumentType".equalsIgnoreCase(className)) {
      return new TypeToken<DocumentType>(){}.getType();
    }
    
    if ("DocumentTypeFields".equalsIgnoreCase(className)) {
      return new TypeToken<DocumentTypeFields>(){}.getType();
    }
    
    if ("GetDocTypeFailure".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocTypeFailure>(){}.getType();
    }
    
    if ("GetDocTypeSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocTypeSuccess>(){}.getType();
    }
    
    if ("GetDocTypeSuccessDocumentType".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocTypeSuccessDocumentType>(){}.getType();
    }
    
    if ("GetDocTypesFailure".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocTypesFailure>(){}.getType();
    }
    
    if ("GetDocTypesSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocTypesSuccess>(){}.getType();
    }
    
    if ("GetDocTypesSuccessDocumentTypes".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocTypesSuccessDocumentTypes>(){}.getType();
    }
    
    if ("GetDocumentFailure".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocumentFailure>(){}.getType();
    }
    
    if ("GetDocumentSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocumentSuccess>(){}.getType();
    }
    
    if ("GetDocumentSuccessDocument".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocumentSuccessDocument>(){}.getType();
    }
    
    if ("GetDocumentsFailure".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocumentsFailure>(){}.getType();
    }
    
    if ("GetDocumentsSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocumentsSuccess>(){}.getType();
    }
    
    if ("GetDocumentsSuccessDocuments".equalsIgnoreCase(className)) {
      return new TypeToken<GetDocumentsSuccessDocuments>(){}.getType();
    }
    
    if ("GetIndexFailure".equalsIgnoreCase(className)) {
      return new TypeToken<GetIndexFailure>(){}.getType();
    }
    
    if ("GetIndexSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<GetIndexSuccess>(){}.getType();
    }
    
    if ("GetIndexSuccessIndexes".equalsIgnoreCase(className)) {
      return new TypeToken<GetIndexSuccessIndexes>(){}.getType();
    }
    
    if ("GetIndexesFailure".equalsIgnoreCase(className)) {
      return new TypeToken<GetIndexesFailure>(){}.getType();
    }
    
    if ("GetIndexesFailureIndexes".equalsIgnoreCase(className)) {
      return new TypeToken<GetIndexesFailureIndexes>(){}.getType();
    }
    
    if ("GetIndexesSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<GetIndexesSuccess>(){}.getType();
    }
    
    if ("GetIndexesSuccessIndexes".equalsIgnoreCase(className)) {
      return new TypeToken<GetIndexesSuccessIndexes>(){}.getType();
    }
    
    if ("GetIndexesSuccessIndexesMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<GetIndexesSuccessIndexesMetadata>(){}.getType();
    }
    
    if ("SearchFailure".equalsIgnoreCase(className)) {
      return new TypeToken<SearchFailure>(){}.getType();
    }
    
    if ("SearchFailureSuggestResults".equalsIgnoreCase(className)) {
      return new TypeToken<SearchFailureSuggestResults>(){}.getType();
    }
    
    if ("SearchQuery".equalsIgnoreCase(className)) {
      return new TypeToken<SearchQuery>(){}.getType();
    }
    
    if ("SearchQuerySearch".equalsIgnoreCase(className)) {
      return new TypeToken<SearchQuerySearch>(){}.getType();
    }
    
    if ("SearchQuerySearchAggregations".equalsIgnoreCase(className)) {
      return new TypeToken<SearchQuerySearchAggregations>(){}.getType();
    }
    
    if ("SearchSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<SearchSuccess>(){}.getType();
    }
    
    if ("SearchSuccessSuggestResults".equalsIgnoreCase(className)) {
      return new TypeToken<SearchSuccessSuggestResults>(){}.getType();
    }
    
    if ("SearchSuccessSuggestResultsMetadata".equalsIgnoreCase(className)) {
      return new TypeToken<SearchSuccessSuggestResultsMetadata>(){}.getType();
    }
    
    if ("SuggestFailure".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestFailure>(){}.getType();
    }
    
    if ("SuggestQuery".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestQuery>(){}.getType();
    }
    
    if ("SuggestQuerySuggest".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestQuerySuggest>(){}.getType();
    }
    
    if ("SuggestSuccess".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestSuccess>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
